apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'

android {
    signingConfigs {
        config {
            keyAlias 'MyReleaseKey'
            keyPassword 'nicola950'
            storeFile file('C:/Users/Nicola/AndroidStudioProjects/Utilis android/keystore.release.jks')
            storePassword 'nicola950'
        }
    }
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.dev.nicola.allweather"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 134
        versionName "1.3.4"

        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            debuggable true
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
        }
        buildTypes.each {
            it.buildConfigField 'String', 'DARKSKY_API_KEY', DarkSkyApiKey
            it.buildConfigField 'String', 'APIXU_API_KEY', ApixuApiKey
            it.buildConfigField 'String', 'PLAY_STORE_LICENSE_KEY', LicenseApiKey
            it.buildConfigField 'String', 'GOOGLE_API_KEY', GoogleApiKey
            it.buildConfigField 'String', 'AMAZON_ANALYTICS_ID', AmazonMobileAnalyticsAppID
            it.buildConfigField 'String', 'AMAZON_COGNITO_ID', AmazonCognitoIdentityPoolID
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
        return
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //Support library
    //noinspection GradleCompatible
    compile "com.android.support:appcompat-v7:$rootProject.ext.support_version"
    compile "com.android.support:support-v4:$rootProject.ext.support_version"
    compile "com.android.support:design:$rootProject.ext.support_version"
    compile "com.android.support:cardview-v7:$rootProject.ext.support_version"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.support_version"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:multidex:1.0.1'

    //Play services library
    compile "com.google.android.gms:play-services-location:$rootProject.ext.play_services_version"
    compile "com.google.android.gms:play-services-ads:$rootProject.ext.play_services_version"

    //Network
    compile "com.squareup.okhttp3:okhttp:$rootProject.ext.okHttp_version"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okHttp_version"
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit_version"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofit_version"
    compile "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofit_version"

    //Joda Time
    compile 'joda-time:joda-time:2.9.9'

    //Image loader
    compile "com.github.bumptech.glide:glide:$rootProject.ext.glide_version"

    //SearchView
    compile "com.github.arimorty:floatingsearchview:$rootProject.ext.searchView_version"

    //Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //Rx
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.0.1'

    //Amazon Analytics
    compile 'com.amazonaws:aws-android-sdk-mobileanalytics:2.4.2'

}

repositories {
    mavenCentral()
}